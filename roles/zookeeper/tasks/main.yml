- name: Check if zookeeper is installed
  stat:
    path: "{{ ZOOKEEPER_HOME }}"
  register: zoo
  tags: ['start', 'stop', 'install', 'uninstall', 'info']

- name: Download Zookeeper Tar
  get_url:
    url: "{{ ZOOKEEPER_URL }}"
    dest: "{{ INSTALLATION_DIR }}"
    mode: 0644
  tags: install
  when: zoo.stat.exists == False

- name: Unpack Zookeeper tar
  shell: tar zxvf {{ INSTALLATION_DIR }}/{{ ZOOKEEPER_TAR }} -C {{ INSTALLATION_DIR }}
  tags: install
  when: zoo.stat.exists == False

- name: Remove Zookeeper tar
  file:
    path: "{{ INSTALLATION_DIR }}/{{ ZOOKEEPER_TAR }}"
    owner: ubuntu
    state: absent
  when: zoo.stat.exists == False

- name: Move zookeeper-{{ ZOOKEEPER_VERSION }} to zookeeper
  shell: mv {{ INSTALLATION_DIR }}/zookeeper-{{ ZOOKEEPER_VERSION }} {{ INSTALLATION_DIR }}/zookeeper
  tags: install
  when: zoo.stat.exists == False

- name: Create data directory
  file:
    path: "{{ ZOOKEEPER_DATA_DIR }}"
    state: directory
    owner: ubuntu
    mode: 0644
  tags: install
  when: zoo.stat.exists == False

- name: Create Zookeeper log directory
  file:
    path: "{{ ZOOKEEPER_LOG_DIR }}"
    state: directory
    owner: ubuntu
    mode: 0644
  tags: install
  when: zoo.stat.exists == False

- name: Configure zoo.cfg
  template:
    src: zoo_sample.cfg.j2
    dest: "{{ INSTALLATION_DIR }}/zookeeper/conf/zoo.cfg"
  tags: install
  when: zoo.stat.exists == False

- name: Configure log4j.properties
  template:
    src: log4j.properties.j2
    dest: "{{ INSTALLATION_DIR }}/zookeeper/conf/log4j.properties"
  tags: install
  when: zoo.stat.exists == False

- name: Configure myid
  template:
    src: myid.j2
    dest: "{{ ZOOKEEPER_DATA_DIR }}/myid"
  tags: install
  when: zoo.stat.exists == False

- name: Fail play if Zookeeper is not installed
  fail:
    msg: "Zookeeper is not installed"
  when: zoo.stat.exists == False
  tags: ['start', 'stop', 'uninstall', 'info']

- name: Call service task
  include: service.yml stage='before start/stop action'
  when: zoo.stat.exists
  tags: ['stop', 'start', 'uninstall', 'info']

- name: Start zookeeper service
  shell: "{{ ZOOKEEPER_START_COMMAND }}" 
  ignore_errors: yes
  when: zoo.stat.exists and zoo_service_status.rc != 0
  tags: start
  notify:
    - zoo_service_status report

- name: Stop zookeeper service
  shell: "{{ ZOOKEEPER_STOP_COMMAND }}"
  when: zoo.stat.exists and zoo_service_status.rc == 0
  tags: ['stop', 'uninstall']
  notify:
    - zoo_service_status report

- name: Uninstall zookeeper
  file:
    path: "{{ ZOOKEEPER_HOME }}"
    state: absent
    owner: ubuntu
  tags: uninstall
  when: zoo.stat.exists

- name: Check server mode - leader or follower
  shell: echo srvr | nc localhost 2181 | grep Mode
  ignore_errors: yes
  register: server_mode
  tags: info

- name: Zookeeper exists status report
  debug:
    msg: Zookeeper is {% if zoo.stat.exists == False %}not {% endif %}installed
  tags: info

- name: Zookeeper server_mode report
  debug:
    msg: "{{ server_mode.stdout }}"
  tags: info
